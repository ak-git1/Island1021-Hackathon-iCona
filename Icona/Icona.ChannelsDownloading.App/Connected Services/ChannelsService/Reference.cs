//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Icona.ChannelsDownloading.App.ChannelsService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChannelContract", Namespace="http://schemas.datacontract.org/2004/07/Icona.Logic.Contracts")]
    [System.SerializableAttribute()]
    public partial class ChannelContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string AttributesField;
        
        private int CommunityIdField;
        
        private string DescriptionField;
        
        private int IdField;
        
        private System.Nullable<System.DateTime> LastSynchronizationDateField;
        
        private string TagsField;
        
        private string TitleField;
        
        private Icona.Common.Enums.ChannelTypes TypeField;
        
        private string UrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Attributes {
            get {
                return this.AttributesField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributesField, value) != true)) {
                    this.AttributesField = value;
                    this.RaisePropertyChanged("Attributes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int CommunityId {
            get {
                return this.CommunityIdField;
            }
            set {
                if ((this.CommunityIdField.Equals(value) != true)) {
                    this.CommunityIdField = value;
                    this.RaisePropertyChanged("CommunityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.DateTime> LastSynchronizationDate {
            get {
                return this.LastSynchronizationDateField;
            }
            set {
                if ((this.LastSynchronizationDateField.Equals(value) != true)) {
                    this.LastSynchronizationDateField = value;
                    this.RaisePropertyChanged("LastSynchronizationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Tags {
            get {
                return this.TagsField;
            }
            set {
                if ((object.ReferenceEquals(this.TagsField, value) != true)) {
                    this.TagsField = value;
                    this.RaisePropertyChanged("Tags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Icona.Common.Enums.ChannelTypes Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NewsItemContract", Namespace="http://schemas.datacontract.org/2004/07/Icona.Logic.Contracts")]
    [System.SerializableAttribute()]
    public partial class NewsItemContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int ChannelIdField;
        
        private System.DateTime DateField;
        
        private string DescriptionField;
        
        private string TextField;
        
        private string TitleField;
        
        private string UrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ChannelId {
            get {
                return this.ChannelIdField;
            }
            set {
                if ((this.ChannelIdField.Equals(value) != true)) {
                    this.ChannelIdField = value;
                    this.RaisePropertyChanged("ChannelId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ChannelsService.ChannelsService")]
    public interface ChannelsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChannelsService/GetChannels", ReplyAction="http://tempuri.org/ChannelsService/GetChannelsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ServiceModel.FaultException), Action="http://tempuri.org/ChannelsService/GetChannelsFaultExceptionFault", Name="FaultException", Namespace="http://schemas.datacontract.org/2004/07/System.ServiceModel")]
        Icona.ChannelsDownloading.App.ChannelsService.ChannelContract[] GetChannels();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChannelsService/GetChannels", ReplyAction="http://tempuri.org/ChannelsService/GetChannelsResponse")]
        System.Threading.Tasks.Task<Icona.ChannelsDownloading.App.ChannelsService.ChannelContract[]> GetChannelsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChannelsService/AddNewsItems", ReplyAction="http://tempuri.org/ChannelsService/AddNewsItemsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ServiceModel.FaultException), Action="http://tempuri.org/ChannelsService/AddNewsItemsFaultExceptionFault", Name="FaultException", Namespace="http://schemas.datacontract.org/2004/07/System.ServiceModel")]
        void AddNewsItems(Icona.ChannelsDownloading.App.ChannelsService.NewsItemContract[] items);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChannelsService/AddNewsItems", ReplyAction="http://tempuri.org/ChannelsService/AddNewsItemsResponse")]
        System.Threading.Tasks.Task AddNewsItemsAsync(Icona.ChannelsDownloading.App.ChannelsService.NewsItemContract[] items);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ChannelsServiceChannel : Icona.ChannelsDownloading.App.ChannelsService.ChannelsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChannelsServiceClient : System.ServiceModel.ClientBase<Icona.ChannelsDownloading.App.ChannelsService.ChannelsService>, Icona.ChannelsDownloading.App.ChannelsService.ChannelsService {
        
        public ChannelsServiceClient() {
        }
        
        public ChannelsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ChannelsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChannelsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChannelsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Icona.ChannelsDownloading.App.ChannelsService.ChannelContract[] GetChannels() {
            return base.Channel.GetChannels();
        }
        
        public System.Threading.Tasks.Task<Icona.ChannelsDownloading.App.ChannelsService.ChannelContract[]> GetChannelsAsync() {
            return base.Channel.GetChannelsAsync();
        }
        
        public void AddNewsItems(Icona.ChannelsDownloading.App.ChannelsService.NewsItemContract[] items) {
            base.Channel.AddNewsItems(items);
        }
        
        public System.Threading.Tasks.Task AddNewsItemsAsync(Icona.ChannelsDownloading.App.ChannelsService.NewsItemContract[] items) {
            return base.Channel.AddNewsItemsAsync(items);
        }
    }
}
